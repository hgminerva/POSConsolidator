@{
    ViewBag.Title = "Event";
}

<link href="/css/bootstrap.min.css" rel="stylesheet" />
<link href="/css/styles.css" rel="stylesheet" />

<script src="/js/jquery.js"></script>
<script src="/lib/bootstrap/js/bootstrap.js"></script>

<script src="/js/date.js"></script>

<script src="/wijmo/controls/wijmo.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.input.min.js"></script>
<script src="/wijmo/controls/wijmo.grid.min.js" type="text/javascript"></script>
<script src="/wijmo/controls/wijmo.chart.min.js"></script>

<link href="/wijmo/styles/wijmo.min.css" rel="stylesheet" />

@*Menu*@
<nav class="navbar navbar-default navbar-fixed-top topnav" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand topnav" href="~/Home"><span><img src="/img/logo-1.png" /></span><span class="hidden-xs"></span></a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav navbar-right">
                <li role="presentation"><a href="~/Admin/User">Users</a></li>
                <li role="presentation" class="active"><a href="~/Admin/Event">Event</a></li>
                <li role="presentation"><a href="~/Admin/Sales">Sales</a></li>
                <li role="presentation"><a href="~/Admin/Product">Products</a></li>
                <li role="presentation"><a href="~/Admin/Package">Packages</a></li>
                <li role="presentation"><a href="~/Admin/News">News</a></li>
                <li role="presentation"><a href="~/Admin/"><i class="fa fa-home"></i></a></li>
            </ul>
        </div>
    </div>
</nav>

@*List*@
<div id="DivEvents">
    <div class="container">

        <div class="row">
            <h2 class="section-heading">Event</h2>
            <div class="col-lg-11">
                <h4>Events</h4>
            </div>
            <div class="col-lg-1">
                <button id="CmdAddEvent" type="submit" class="btn btn-primary" onclick="CmdEventAdd_OnClick()">Add</button>
            </div>
        </div>

        <br />

        <div class="row">
            <div class="col-lg-12">
                <div id="EventGrid" class="grid"></div>
            </div>
        </div>

        <br />

        <div class="row">
            <div class="btn-group col-md-7" id="naviagtionPageEvent">
                <button type="button" class="btn btn-default" id="btnMoveToFirstPageEvent">
                    <span class="glyphicon glyphicon-fast-backward"></span>
                </button>
                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageEvent">
                    <span class="glyphicon glyphicon-step-backward"></span>
                </button>
                <button type="button" class="btn btn-default" disabled style="width:100px" id="btnCurrentPageEvent"></button>
                <button type="button" class="btn btn-default" id="btnMoveToNextPageEvent">
                    <span class="glyphicon glyphicon-step-forward"></span>
                </button>
                <button type="button" class="btn btn-default" id="btnMoveToLastPageEvent">
                    <span class="glyphicon glyphicon-fast-forward"></span>
                </button>
            </div>
        </div>

    </div>
</div>

@*Edit Detail*@
<div class="modal fade" id="EventEdit">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title">Event Edit</h4>
            </div>
            <div class="modal-body">
                <dl class="dl-horizontal">
                    <dt>Date</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_Id" type="hidden" />
                        <div id="EventEdit_EventDate"></div>
                        <input class="form-control" id="EventEdit_EventDate_Data" type="hidden" />
                    </dd>
                    <dt>Event</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_EventDescription" type="text" />
                    </dd>
                    <dt>Particulars</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_Particulars" type="text" />
                    </dd>
                    <dt>URL</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_URL" type="text" />
                    </dd>
                    <dt>Video URL</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_VideoURL" type="text" />
                    </dd>
                    <dt>Type</dt>
                    <dd>
                        <select class="form-control custom-width" id="EventEdit_EventType">
                            <option value="WEBINAR">WEBINAR</option>
                            <option value="USER">USER</option>
                            <option value="WEB99">WEB99</option>
                            <option value="REALTIMEBETA">REALTIMEBETA</option>
                            <option value="WORKSHOP">WORKSHOP</option>
                            <option value="OTHER">OTHER</option>
                        </select>
                    </dd>
                    <dt>Resticted</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_IsRestricted" type="checkbox" />
                    </dd>
                    <dt>Archived</dt>
                    <dd>
                        <input class="form-control" id="EventEdit_IsArchived" type="checkbox" />
                    </dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" id="CmdEventEditOk" onclick="CmdEventEditOk_OnClick()">
                    Ok
                </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal" id="CmdEventEditCancel">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

@*Loading*@
<div class="modal fade" id="loading" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true">
    <div class="modal-dialog" style="width: 220px;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Loading...</h4>
            </div>
            <div class="modal-body">
                <img src="/img/progress_bar.gif" />
            </div>
        </div>
    </div>
</div>

@*Module*@
<script type="text/javascript">
    var Events;

    var EventGrid;

    var EventDate;

    var btnFirstPageEvent;
    var btnPreviousPageEvent;
    var btnNextPageEvent;
    var btnLastPageEvent;
    var btnCurrentPageEvent;

    function CmdEventEdit_OnClick() {
        Events.editItem(Events.currentItem);

        $('#EventEdit').modal({
            show: true,
            backdrop: false
        });

        var Event = Events.currentEditItem;
        document.getElementById('EventEdit_Id').value = Event.Id !== null && typeof (Event.Id) != 'undefined' ? wijmo.Globalize.format(Event.Id) : '';
        document.getElementById('EventEdit_EventDate').value = Event.EventDate ? Event.EventDate : '';
        document.getElementById('EventEdit_EventDate_Data').value = Event.EventDate ? Event.EventDate : '';
        document.getElementById('EventEdit_EventDescription').value = Event.EventDescription ? Event.EventDescription : '';
        document.getElementById('EventEdit_Particulars').value = Event.Particulars ? Event.Particulars : '';
        document.getElementById('EventEdit_URL').value = Event.URL ? Event.URL : '';
        document.getElementById('EventEdit_VideoURL').value = Event.VideoURL ? Event.VideoURL : '';
        document.getElementById('EventEdit_EventType').value = Event.EventType ? Event.EventType : '';
        document.getElementById('EventEdit_IsRestricted').checked = Event.IsRestricted;
        document.getElementById('EventEdit_IsArchived').checked = Event.IsArchived;

        EventDate.dispose();
        EventDate = new wijmo.input.InputDate('#EventEdit_EventDate', {
            format: 'M/d/yyyy',
            value: new Date(Event.EventDate),
            onValueChanged: function () {
                document.getElementById('EventEdit_EventDate_Data').value = this.value.toString("M/d/yyyy");
            }
        });
    }
    function CmdEventAdd_OnClick() {
        $('#EventEdit').modal({
            show: true,
            backdrop: false
        });

        var CurrentDate = new Date();

        document.getElementById('EventEdit_Id').value = 0;
        document.getElementById('EventEdit_EventDate').value = CurrentDate.toString("M/d/yyyy");
        document.getElementById('EventEdit_EventDate_Data').value = CurrentDate.toString("M/d/yyyy");
        document.getElementById('EventEdit_EventDescription').value = "";
        document.getElementById('EventEdit_Particulars').value = "";
        document.getElementById('EventEdit_URL').value = "";
        document.getElementById('EventEdit_VideoURL').value = "";
        document.getElementById('EventEdit_EventType').value = "WEBINAR";
        document.getElementById('EventEdit_IsRestricted').checked = false;
        document.getElementById('EventEdit_IsArchived').checked = false;

        EventDate.dispose();
        EventDate = new wijmo.input.InputDate('#EventEdit_EventDate', {
            format: 'M/d/yyyy',
            value: new Date(Event.EventDate),
            onValueChanged: function () {
                document.getElementById('EventEdit_EventDate_Data').value = this.value.toString("M/d/yyyy");
            }
        });
    }
    function CmdEventDelete_OnClick() {
        Events.editItem(Events.currentItem);

        var Id = Events.currentEditItem.Id;
        var EventDescription = Events.currentEditItem.EventDescription;

        if (confirm("Delete " + EventDescription + "?") == true) {
            $.ajax({
                type: "DELETE",
                url: "/api/DeleteEvent/" + Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        window.location.reload();
                    },
                    404: function () {
                        alert("Not found");
                    },
                    400: function () {
                        alert("Bad request");
                    }
                }
            });
        }
    }
    function CmdEventEditOk_OnClick() {
        if (confirm("Save Event?") == true) {

            var Event = new Object();

            Event.Id = document.getElementById('EventEdit_Id').value;
            Event.EventDate = document.getElementById('EventEdit_EventDate_Data').value;
            Event.EventDescription = document.getElementById('EventEdit_EventDescription').value;
            Event.Particulars = document.getElementById('EventEdit_Particulars').value;
            Event.URL = document.getElementById('EventEdit_URL').value;
            Event.VideoURL = document.getElementById('EventEdit_VideoURL').value;
            Event.EventType = document.getElementById('EventEdit_EventType').value;
            Event.IsRestricted = document.getElementById('EventEdit_IsRestricted').checked;
            Event.IsArchived = document.getElementById('EventEdit_IsArchived').checked;

            var data = JSON.stringify(Event);

            // Add New
            if (Event.Id == 0) {
                $.ajax({
                    type: "POST",
                    url: "/api/AddEvent",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    success: function (id) {
                        if (id > 0) {
                            window.location.reload();
                        } else {
                            alert("Not added");
                        }
                    }
                });

                // Edit
            } else {
                $.ajax({
                    type: "PUT",
                    url: "/api/UpdateEvent/" + Event.Id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            window.location.reload();
                        },
                        404: function () {
                            alert("Not found");
                        },
                        400: function () {
                            alert("Bad request");
                        }
                    }
                });
            }
        }
    }

    function GetEvents() {
        var events = new wijmo.collections.ObservableArray();
        $('#loading').modal('show');
        $.ajax({
            url: '/api/Event',
            cache: false,
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            data: {},
            success: function (Results) {
                $('#loading').modal('hide');
                if (Results.length > 0) {
                    for (i = 0; i < Results.length; i++) {
                        events.push({
                            EditId: "<button class='btn btn-primary btn-xs' data-toggle='modal' id='CmdEditEvent' onclick='CmdEventEdit_OnClick()'>Edit</button>",
                            DeleteId: "<button class='btn btn-danger btn-xs' data-toggle='modal' id='CmdDeleteEvent' onclick='CmdEventDelete_OnClick()'>Delete</button>",
                            Id: Results[i]["Id"],
                            EventDate: Results[i]["EventDate"],
                            EventDescription: Results[i]["EventDescription"],
                            Particulars: Results[i]["Particulars"],
                            URL: Results[i]["URL"],
                            VideoURL: Results[i]["VideoURL"],
                            EventType: Results[i]["EventType"],
                            IsRestricted: Results[i]["IsRestricted"],
                            IsArchived: Results[i]["IsArchived"],
                            VideoURL: Results[i]["VideoURL"]
                        });
                    }
                } else {
                    alert("No data.");
                }
            }
        }).fail(
            function (xhr, textStatus, err) {
                alert(err);
            }
        );
        return events;
    }
    function DeleteEvent(Id) {
        $.ajax({
            type: "DELETE",
            url: "/api/DeleteEvent/" + Id,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: { Id: EventId },
            success: function (response) {
                alert("Event deleted.");
                window.location.reload();
            },
            failure: function (response) {
                alert("Error - " + response.d);
            },
            error: function (e) { }
        });
        window.location.reload();
    }
    function UpdateNavigateButtonsEvent() {
        if (Events.pageSize <= 0) {
            document.getElementById('naviagtionPageEvent').style.display = 'none';
            return;
        }
        document.getElementById('naviagtionPageEvent').style.display = 'block';
        if (Events.pageIndex === 0) {
            btnFirstPageEvent.setAttribute('disabled', 'disabled');
            btnPreviousPageEvent.setAttribute('disabled', 'disabled');
            btnNextPageEvent.removeAttribute('disabled');
            btnLastPageEvent.removeAttribute('disabled');
        }
        else if (Events.pageIndex === (Events.pageCount - 1)) {
            btnFirstPageEvent.removeAttribute('disabled');
            btnPreviousPageEvent.removeAttribute('disabled');
            btnLastPageEvent.setAttribute('disabled', 'disabled');
            btnNextPageEvent.setAttribute('disabled', 'disabled');
        }
        else {
            btnFirstPageEvent.removeAttribute('disabled');
            btnPreviousPageEvent.removeAttribute('disabled');
            btnNextPageEvent.removeAttribute('disabled');
            btnLastPageEvent.removeAttribute('disabled');
        }
        btnCurrentPageEvent.innerHTML = (Events.pageIndex + 1) + ' / ' + Events.pageCount;
    }

    $(document).ready(function () {
        btnFirstPageEvent = document.getElementById('btnMoveToFirstPageEvent');
        btnPreviousPageEvent = document.getElementById('btnMoveToPreviousPageEvent');
        btnNextPageEvent = document.getElementById('btnMoveToNextPageEvent');
        btnLastPageEvent = document.getElementById('btnMoveToLastPageEvent');
        btnCurrentPageEvent = document.getElementById('btnCurrentPageEvent');

        Events = new wijmo.collections.CollectionView(GetEvents());

        EventGrid = new wijmo.grid.FlexGrid('#EventGrid');

        EventGrid.initialize({
            columns: [
                        {
                            "header": "Edit",
                            "binding": "EditId",
                            "width": 60,
                            "allowSorting": false,
                            "isContentHtml": true
                        },
                        {
                            "header": "Delete",
                            "binding": "DeleteId",
                            "width": 60,
                            "allowSorting": false,
                            "isContentHtml": true
                        },
                        {
                            "header": "Date",
                            "binding": "EventDate",
                            "allowSorting": false,
                            "width": 80
                        },
                        {
                            "header": "Event",
                            "binding": "EventDescription",
                            "allowSorting": false,
                            "width": "4*"
                        },
                        {
                            "header": "Particulars",
                            "binding": "Particulars",
                            "allowSorting": false,
                            "width": "4*"
                        },
                        {
                            "header": "Type",
                            "binding": "EventType",
                            "allowSorting": false,
                            "width": 80
                        },
                        {
                            "header": "URL",
                            "binding": "URL",
                            "allowSorting": false,
                            "width": "4*"
                        },
                        {
                            "header": "Video URL",
                            "binding": "VideoURL",
                            "allowSorting": false,
                            "width": "4*"
                        }
            ],
            autoGenerateColumns: false,
            itemsSource: Events,
            isReadOnly: true,
            selectionMode: wijmo.grid.SelectionMode.Row
        });

        EventGrid.trackChanges = true;

        Events.pageSize = 15;

        EventDate = new wijmo.input.InputDate('#EventEdit_EventDate', {
            format: 'M/d/yyyy',
            value: new Date()
        });

        UpdateNavigateButtonsEvent();

        // Page Button Events
        btnFirstPageEvent.addEventListener('click', function () {
            Events.moveToFirstPage();
            UpdateNavigateButtonsEvent();
        });
        btnPreviousPageEvent.addEventListener('click', function () {
            Events.moveToPreviousPage();
            UpdateNavigateButtonsEvent();
        });
        btnNextPageEvent.addEventListener('click', function () {
            Events.moveToNextPage();
            UpdateNavigateButtonsEvent();
        });
        btnLastPageEvent.addEventListener('click', function () {
            Events.moveToLastPage();
            UpdateNavigateButtonsEvent();
        });

    });
</script>
